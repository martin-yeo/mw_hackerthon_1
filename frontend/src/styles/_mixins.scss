// Responsive breakpoints
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

// Flexbox helpers
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Typography
@mixin typography($size, $weight: normal, $line-height: 1.5) {
  font-size: map-get($font-size, $size);
  font-weight: $weight;
  line-height: $line-height;
}

// Truncate text
@mixin truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// Box shadow
@mixin shadow($level: md) {
  box-shadow: map-get($shadows, $level);
}

// Transitions
@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property $transition-duration $transition-timing, comma);
  }
  transition: $transitions;
}

// Button styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: map-get($spacing, 2) map-get($spacing, 4);
  border: none;
  border-radius: map-get($border-radius, md);
  font-family: $font-family;
  font-weight: 500;
  cursor: pointer;
  @include transition(background-color, transform);

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  &:hover:not(:disabled) {
    transform: translateY(-1px);
  }

  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

// Input styles
@mixin input-base {
  width: 100%;
  padding: map-get($spacing, 2) map-get($spacing, 3);
  border: 1px solid $text-disabled;
  border-radius: map-get($border-radius, md);
  font-family: $font-family;
  font-size: map-get($font-size, base);
  @include transition(border-color, box-shadow);

  &:focus {
    outline: none;
    border-color: $primary-color;
    box-shadow: 0 0 0 2px rgba($primary-color, 0.2);
  }

  &:disabled {
    background-color: $background-grey;
    cursor: not-allowed;
  }
}

// Card styles
@mixin card {
  background-color: $background-color;
  border-radius: map-get($border-radius, lg);
  @include shadow(md);
} 